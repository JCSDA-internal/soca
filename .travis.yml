#======================================================================
# Project settings
#======================================================================
branches:
  only:
    - develop
    - feature/codebuild_test

env:
  - BUILD_TYPE=Debug
  
language: cpp

services:
  - docker


#======================================================================
#======================================================================
before_install:
  - REPO_SOURCE_DIR=${TRAVIS_BUILD_DIR}/jcsda/src_repo
  - BRANCH=$( [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && echo $TRAVIS_BRANCH || echo $TRAVIS_PULL_REQUEST_BRANCH )

  #------------------------------------------------------------
  # Clone all repos
  #------------------------------------------------------------  
  - mkdir -p ${REPO_SOURCE_DIR}
  
  # checkout the bundle with the same branch name
  - git clone https://github.com/jcsda/soca-bundle.git ${REPO_SOURCE_DIR}/soca-bundle
  - cd ${REPO_SOURCE_DIR}/soca-bundle
  - git checkout $BRANCH || echo "No branch named $BRANCH in soca-bundle repo"

  # clone the testing branch of soca
  - git clone -b $BRANCH https://github.com/jcsda/soca.git ${REPO_SOURCE_DIR}/soca-bundle/soca

  # disable git-LFS 
  - git lfs install --skip-smudge

  # default/develop branch for these repos
  - git clone https://github.com/jcsda/GSW-Fortran.git ${REPO_SOURCE_DIR}/soca-bundle/gsw
  - git clone https://github.com/jcsda/fckit.git       ${REPO_SOURCE_DIR}/soca-bundle/fckit
  - git clone https://github.com/jcsda/soca-config.git ${REPO_SOURCE_DIR}/soca-bundle/soca-config

  # specific branch for these repo
  - git clone -b dev/master-ecbuild https://github.com/JCSDA/FMS.git           ${REPO_SOURCE_DIR}/soca-bundle/fms
  - git clone -b feature/ecbuild    https://github.com/JCSDA/CVMix-src.git     ${REPO_SOURCE_DIR}/soca-bundle/cvmix
  - git clone -b feature/ecbuild    https://github.com/JCSDA/geoKdTree.git     ${REPO_SOURCE_DIR}/soca-bundle/geokdtree
  - git clone -b feature/ecbuild    https://github.com/JCSDA/MOM6_DA_hooks.git ${REPO_SOURCE_DIR}/soca-bundle/mom6_da_hooks
  - git clone -b dev/master-ecbuild https://github.com/JCSDA/MOM6.git          ${REPO_SOURCE_DIR}/soca-bundle/mom6

  # checkout the same branch name for the remaining JEDI repos (or the default branch if no same name branch as the soca test branch)
  - for repo in oops ioda ioda-converters ufo saber; do
      git clone https://github.com/jcsda/${repo}.git ${REPO_SOURCE_DIR}/soca-bundle/${repo};
      ( cd ${REPO_SOURCE_DIR}/soca-bundle/${repo}; git checkout $BRANCH || echo "No branch named $BRANCH in $repo repo"; );
    done

  # do not switch to branches specified in the bundle by removing "UPDATE"
  - "sed -i 's/UPDATE/) #/' ${REPO_SOURCE_DIR}/soca-bundle/CMakeLists.txt"
  - cd ${REPO_SOURCE_DIR} && find . -name \* -exec chmod 777 {} \;


  #------------------------------------------------------------
  # get docker image from jcsda/docker:latest
  #------------------------------------------------------------
  - cd ${REPO_SOURCE_DIR}/soca-bundle/soca
  - docker build -t jcsda/dockerl2 --build-arg=Dockerfile .  #Dockerfile handles ssh for mpi
  - docker images

  # request codecov to detect CI environment to pass through to docker
  - ci_env=`bash <(curl -s https://codecov.io/env)`
  - docker run -d -t $ci_env -e BUILD_TYPE --name jcsda_container -v ${REPO_SOURCE_DIR}/soca-bundle:/jcsda/src_repo jcsda/dockerl2
  - docker ps -a


#======================================================================
# Here are the run steps
#======================================================================
script:
  - docker exec jcsda_container bash -c 'cp -r /jcsda/.openmpi/ ~/'
  - docker exec jcsda_container bash -c 'cd /build_container && ecbuild /jcsda/src_repo/ -DSOCA_TESTS_FORC_DEFAULT_TOL=ON -DCMAKE_BUILD_TYPE=$BUILD_TYPE'
  - docker exec jcsda_container bash -c 'cd /build_container/soca && make -j4'
  - docker exec jcsda_container bash -c 'cd /build_container/soca && ctest -V -j2'

