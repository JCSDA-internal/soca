#======================================================================
# Project settings
#======================================================================
branches:
  only:
    - develop

language: cpp

services:
  - docker

before_install:
  - date
  - REPO_SOURCE_DIR=${TRAVIS_BUILD_DIR}/jcsda/src_repo
#  create the same file structure on Travis VM and Docker container
  - mkdir -p ${TRAVIS_BUILD_DIR}/jcsda/src_repo/soca
  - mv !(jcsda) jcsda/src_repo/soca
# echo branch info
  - echo $TRAVIS_PULL_REQUEST
  - echo $TRAVIS_PULL_REQUEST_BRANCH
  - echo $TRAVIS_BRANCH
  - export BRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH, PR=$PR, BRANCH=$BRANCH"
#======================================================================
# Clone all repos
#======================================================================
#  checkout for the same branch name in soca-bundle
  - git clone https://github.com/jcsda/soca-bundle.git ${REPO_SOURCE_DIR}/soca-bundle
  - cd ${REPO_SOURCE_DIR}/soca-bundle
  - git checkout $BRANCH || echo "No branch named $BRANCH in oops repo"
  - cd $REPO_SOURCE_DIR  

#  default/develop branch for these repos
  - git clone https://github.com/jcsda/GSW-Fortran.git ${REPO_SOURCE_DIR}/soca-bundle/gsw
  - git clone https://github.com/jcsda/fckit.git ${REPO_SOURCE_DIR}/soca-bundle/fckit

#  specific branch for these repo
  - git clone -b dev/master-ecbuild https://github.com/JCSDA/FMS.git ${REPO_SOURCE_DIR}/soca-bundle/fms
  - git clone -b feature/ecbuild  https://github.com/JCSDA/CVMix-src.git ${REPO_SOURCE_DIR}/soca-bundle/cvmix
  - git clone -b feature/ecbuild  https://github.com/JCSDA/geoKdTree.git ${REPO_SOURCE_DIR}/soca-bundle/geokdtree
  - git clone -b feature/ecbuild  https://github.com/JCSDA/MOM6_DA_hooks.git ${REPO_SOURCE_DIR}/soca-bundle/mom6_da_hooks
  - git clone -b dev/master-ecbuild https://github.com/JCSDA/MOM6.git ${REPO_SOURCE_DIR}/soca-bundle/mom6


#  checkout for the same branch name in saber
  - git clone https://github.com/jcsda/saber.git ${REPO_SOURCE_DIR}/soca-bundle/saber
  - cd ${REPO_SOURCE_DIR}/soca-bundle/saber
  - git checkout $BRANCH || echo "No branch named $BRANCH in saber repo"
  - cd $REPO_SOURCE_DIR  
  - date  

#  checkout for the same branch name in oops
  - git clone https://github.com/jcsda/oops.git ${REPO_SOURCE_DIR}/soca-bundle/oops
  - cd ${REPO_SOURCE_DIR}/soca-bundle/oops
  - git checkout $BRANCH || echo "No branch named $BRANCH in oops repo"
  - cd $REPO_SOURCE_DIR  
  - date  

#  checkout for the same branch name in crtm
  - date
  - git clone https://github.com/jcsda/crtm.git ${REPO_SOURCE_DIR}/soca-bundle/crtm
  - cd ${REPO_SOURCE_DIR}/soca-bundle/crtm
  - git checkout $BRANCH || echo "No branch named $BRANCH in crtm repo"
  - cd $REPO_SOURCE_DIR
  - date  

#  checkout for the same branch name in ioda
  - git clone https://github.com/jcsda/ioda.git ${REPO_SOURCE_DIR}/soca-bundle/ioda
  - cd ${REPO_SOURCE_DIR}/soca-bundle/ioda
  - git checkout $BRANCH || echo "No branch named $BRANCH in ioda repo"
  - cd $REPO_SOURCE_DIR  
  - date  

#  checkout for the same branch name in ioda-converters
  - git clone https://github.com/jcsda/ioda-converters.git ${REPO_SOURCE_DIR}/soca-bundle/ioda-conventers
  - cd ${REPO_SOURCE_DIR}/soca-bundle/ioda-conventers
  - git checkout $BRANCH || echo "No branch named $BRANCH in ioda repo"
  - cd $REPO_SOURCE_DIR  
  - date  

#  checkout for the same branch name in ufo
  - git clone https://github.com/jcsda/ufo.git ${REPO_SOURCE_DIR}/soca-bundle/ufo
  - cd ${REPO_SOURCE_DIR}/soca-bundle/ufo
  - git checkout $BRANCH || echo "No branch named $BRANCH in ioda repo"
  - cd $REPO_SOURCE_DIR  
  - date  

#  move soca to soca-bundle
  - mv ${REPO_SOURCE_DIR}/soca ${REPO_SOURCE_DIR}/soca-bundle/
  - date  

  - ls ${REPO_SOURCE_DIR}/soca-bundle/

# not switch to develop branch by removing 
# develop UPDATE in CMakeLists.txt in soca-bundle

  - cd soca-bundle
  - sed -i 's/UPDATE BRANCH develop //' CMakeLists.txt
  - cd ${REPO_SOURCE_DIR}
  - ls ${REPO_SOURCE_DIR}
  - ls ${REPO_SOURCE_DIR}/soca-bundle
  - find . -name \* -exec chmod 777 {} \;

#======================================================================
# get docker image
# FROM  jcsda/docker:latest
#======================================================================
  - cd ${REPO_SOURCE_DIR}/soca-bundle/soca
  - date
  - docker build -t jcsda/dockerl2 --build-arg=Dockerfile .  #Dockerfile handles ssh for mpi
  - date
  - docker images
  # request codecov to detect CI environment to pass through to docker
  - ci_env=`bash <(curl -s https://codecov.io/env)`
  - docker run -d -t $ci_env --name jcsda_container -v ${REPO_SOURCE_DIR}/soca-bundle:/jcsda/src_repo jcsda/dockerl2
  - docker ps -a
  - date
#======================================================================
# Here are the run steps
#======================================================================
script:
  - docker exec jcsda_container ls
  - docker exec jcsda_container ls /jcsda/src_repo
  - docker exec jcsda_container bash -c 'cp -r /jcsda/.openmpi/ ~/'
##  use cmake with flags to generate test coverage reports
#  - docker exec jcsda_container bash -c 'cd /build_container && cmake -DCMAKE_MODULE_PATH=/usr/local/share/ecbuild/cmake/ -DCMAKE_BUILD_TYPE=Debug -DENABLE_GPROF=ON  /jcsda/src_repo' 
  - docker exec jcsda_container bash -c 'cd /build_container && ecbuild /jcsda/src_repo/' 
  - docker exec jcsda_container bash -c 'cd /build_container/soca && make -j4'
  - date
  - docker exec jcsda_container bash -c 'cd /build_container/soca && ctest -V'
  - date

